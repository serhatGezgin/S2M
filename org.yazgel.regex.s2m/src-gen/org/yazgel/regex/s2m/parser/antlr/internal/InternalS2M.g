/*
 * generated by Xtext
 */
grammar InternalS2M;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.yazgel.regex.s2m.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.yazgel.regex.s2m.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.yazgel.regex.s2m.services.S2MGrammarAccess;

}

@parser::members {

 	private S2MGrammarAccess grammarAccess;
 	
    public InternalS2MParser(TokenStream input, S2MGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected S2MGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_0_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelAccess().getColonKeyword_0_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getSemicolonKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getAttributesAttributeParserRuleCall_0_4_0()); 
	    }
		lv_attributes_5_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); 
	    }
		lv_rules_6_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_6_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attr' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttrKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getTypeKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_5_0()); 
	    }
		lv_type_5_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getRuleIndexParserRuleCall_0()); 
    }
    this_RuleIndex_0=ruleRuleIndex
    { 
        $current = $this_RuleIndex_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getRuleKeywordParserRuleCall_1()); 
    }
    this_RuleKeyword_1=ruleRuleKeyword
    { 
        $current = $this_RuleKeyword_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getRuleIndexToKeywordParserRuleCall_2()); 
    }
    this_RuleIndexToKeyword_2=ruleRuleIndexToKeyword
    { 
        $current = $this_RuleIndexToKeyword_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getRuleKeywordToIndexParserRuleCall_3()); 
    }
    this_RuleKeywordToIndex_3=ruleRuleKeywordToIndex
    { 
        $current = $this_RuleKeywordToIndex_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRuleIndex
entryRuleRuleIndex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleIndexRule()); }
	 iv_ruleRuleIndex=ruleRuleIndex 
	 { $current=$iv_ruleRuleIndex.current; } 
	 EOF 
;

// Rule RuleIndex
ruleRuleIndex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleIndexAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleIndexAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleIndexAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleIndexAccess().getStartKeyword_3_0());
    }
(
(
		lv_startIndex_4_0=RULE_INT
		{
			newLeafNode(lv_startIndex_4_0, grammarAccess.getRuleIndexAccess().getStartIndexINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startIndex",
        		lv_startIndex_4_0, 
        		"INT");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleIndexAccess().getCommaKeyword_3_2());
    }
)(	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleIndexAccess().getEndKeyword_4_0());
    }
(
(
		lv_endIndex_7_0=RULE_INT
		{
			newLeafNode(lv_endIndex_7_0, grammarAccess.getRuleIndexAccess().getEndIndexINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endIndex",
        		lv_endIndex_7_0, 
        		"INT");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleIndexAccess().getCommaKeyword_4_2());
    }
)	otherlv_9='attr' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleIndexAccess().getAttrKeyword_5());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleIndexAccess().getColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getRuleIndexAccess().getAttrAttributeCrossReference_7_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRuleIndexAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRuleIndexToKeyword
entryRuleRuleIndexToKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleIndexToKeywordRule()); }
	 iv_ruleRuleIndexToKeyword=ruleRuleIndexToKeyword 
	 { $current=$iv_ruleRuleIndexToKeyword.current; } 
	 EOF 
;

// Rule RuleIndexToKeyword
ruleRuleIndexToKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleIndexToKeywordAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleIndexToKeywordAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexToKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleIndexToKeywordAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleIndexToKeywordAccess().getStartKeyword_3_0());
    }
(
(
		lv_startIndex_4_0=RULE_INT
		{
			newLeafNode(lv_startIndex_4_0, grammarAccess.getRuleIndexToKeywordAccess().getStartIndexINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexToKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startIndex",
        		lv_startIndex_4_0, 
        		"INT");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleIndexToKeywordAccess().getCommaKeyword_3_2());
    }
)(	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleIndexToKeywordAccess().getEndKeyword_4_0());
    }
(
(
		lv_endDelimeter_7_0=RULE_STRING
		{
			newLeafNode(lv_endDelimeter_7_0, grammarAccess.getRuleIndexToKeywordAccess().getEndDelimeterSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexToKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endDelimeter",
        		lv_endDelimeter_7_0, 
        		"STRING");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleIndexToKeywordAccess().getCommaKeyword_4_2());
    }
)	otherlv_9='attr' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleIndexToKeywordAccess().getAttrKeyword_5());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleIndexToKeywordAccess().getColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleIndexToKeywordRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getRuleIndexToKeywordAccess().getAttrAttributeCrossReference_7_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRuleIndexToKeywordAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRuleKeyword
entryRuleRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleKeywordRule()); }
	 iv_ruleRuleKeyword=ruleRuleKeyword 
	 { $current=$iv_ruleRuleKeyword.current; } 
	 EOF 
;

// Rule RuleKeyword
ruleRuleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleKeywordAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleKeywordAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleKeywordAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleKeywordAccess().getStartKeyword_3_0());
    }
(
(
		lv_startDelimeter_4_0=RULE_STRING
		{
			newLeafNode(lv_startDelimeter_4_0, grammarAccess.getRuleKeywordAccess().getStartDelimeterSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startDelimeter",
        		lv_startDelimeter_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleKeywordAccess().getCommaKeyword_3_2());
    }
)(	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleKeywordAccess().getEndKeyword_4_0());
    }
(
(
		lv_endDelimeter_7_0=RULE_STRING
		{
			newLeafNode(lv_endDelimeter_7_0, grammarAccess.getRuleKeywordAccess().getEndDelimeterSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endDelimeter",
        		lv_endDelimeter_7_0, 
        		"STRING");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleKeywordAccess().getCommaKeyword_4_2());
    }
)	otherlv_9='attr' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleKeywordAccess().getAttrKeyword_5());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleKeywordAccess().getColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getRuleKeywordAccess().getAttrAttributeCrossReference_7_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRuleKeywordAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRuleKeywordToIndex
entryRuleRuleKeywordToIndex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleKeywordToIndexRule()); }
	 iv_ruleRuleKeywordToIndex=ruleRuleKeywordToIndex 
	 { $current=$iv_ruleRuleKeywordToIndex.current; } 
	 EOF 
;

// Rule RuleKeywordToIndex
ruleRuleKeywordToIndex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleKeywordToIndexAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleKeywordToIndexAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordToIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleKeywordToIndexAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleKeywordToIndexAccess().getStartKeyword_3_0());
    }
(
(
		lv_startDelimeter_4_0=RULE_STRING
		{
			newLeafNode(lv_startDelimeter_4_0, grammarAccess.getRuleKeywordToIndexAccess().getStartDelimeterSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordToIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startDelimeter",
        		lv_startDelimeter_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleKeywordToIndexAccess().getCommaKeyword_3_2());
    }
)(	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleKeywordToIndexAccess().getEndKeyword_4_0());
    }
(
(
		lv_endIndex_7_0=RULE_INT
		{
			newLeafNode(lv_endIndex_7_0, grammarAccess.getRuleKeywordToIndexAccess().getEndIndexINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordToIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endIndex",
        		lv_endIndex_7_0, 
        		"INT");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleKeywordToIndexAccess().getCommaKeyword_4_2());
    }
)	otherlv_9='attr' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleKeywordToIndexAccess().getAttrKeyword_5());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleKeywordToIndexAccess().getColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleKeywordToIndexRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getRuleKeywordToIndexAccess().getAttrAttributeCrossReference_7_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRuleKeywordToIndexAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Rule AttributeType
ruleAttributeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='String' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Integer' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Long' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getLongEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAttributeTypeAccess().getLongEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Short' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getShortEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAttributeTypeAccess().getShortEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Decimal' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Boolean' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_5()); 
    }
));



RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


