/*
 * generated by Xtext
 */
package org.yazgel.regex.s2m.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.yazgel.regex.s2m.services.S2MGrammarAccess;

public class S2MParser extends AbstractContentAssistParser {
	
	@Inject
	private S2MGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.yazgel.regex.s2m.ui.contentassist.antlr.internal.InternalS2MParser createParser() {
		org.yazgel.regex.s2m.ui.contentassist.antlr.internal.InternalS2MParser result = new org.yazgel.regex.s2m.ui.contentassist.antlr.internal.InternalS2MParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRuleAccess().getAlternatives(), "rule__Rule__Alternatives");
					put(grammarAccess.getAttributeTypeAccess().getAlternatives(), "rule__AttributeType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup_0(), "rule__Model__Group_0__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup_3(), "rule__Attribute__Group_3__0");
					put(grammarAccess.getRuleIndexAccess().getGroup(), "rule__RuleIndex__Group__0");
					put(grammarAccess.getRuleIndexAccess().getGroup_3(), "rule__RuleIndex__Group_3__0");
					put(grammarAccess.getRuleIndexAccess().getGroup_4(), "rule__RuleIndex__Group_4__0");
					put(grammarAccess.getRuleIndexToKeywordAccess().getGroup(), "rule__RuleIndexToKeyword__Group__0");
					put(grammarAccess.getRuleIndexToKeywordAccess().getGroup_3(), "rule__RuleIndexToKeyword__Group_3__0");
					put(grammarAccess.getRuleIndexToKeywordAccess().getGroup_4(), "rule__RuleIndexToKeyword__Group_4__0");
					put(grammarAccess.getRuleKeywordAccess().getGroup(), "rule__RuleKeyword__Group__0");
					put(grammarAccess.getRuleKeywordAccess().getGroup_3(), "rule__RuleKeyword__Group_3__0");
					put(grammarAccess.getRuleKeywordAccess().getGroup_4(), "rule__RuleKeyword__Group_4__0");
					put(grammarAccess.getRuleKeywordToIndexAccess().getGroup(), "rule__RuleKeywordToIndex__Group__0");
					put(grammarAccess.getRuleKeywordToIndexAccess().getGroup_3(), "rule__RuleKeywordToIndex__Group_3__0");
					put(grammarAccess.getRuleKeywordToIndexAccess().getGroup_4(), "rule__RuleKeywordToIndex__Group_4__0");
					put(grammarAccess.getModelAccess().getNameAssignment_0_2(), "rule__Model__NameAssignment_0_2");
					put(grammarAccess.getModelAccess().getAttributesAssignment_0_4(), "rule__Model__AttributesAssignment_0_4");
					put(grammarAccess.getModelAccess().getRulesAssignment_1(), "rule__Model__RulesAssignment_1");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getMultiAssignment_3_1(), "rule__Attribute__MultiAssignment_3_1");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_6(), "rule__Attribute__TypeAssignment_6");
					put(grammarAccess.getRuleIndexAccess().getNameAssignment_1(), "rule__RuleIndex__NameAssignment_1");
					put(grammarAccess.getRuleIndexAccess().getStartIndexAssignment_3_1(), "rule__RuleIndex__StartIndexAssignment_3_1");
					put(grammarAccess.getRuleIndexAccess().getEndIndexAssignment_4_1(), "rule__RuleIndex__EndIndexAssignment_4_1");
					put(grammarAccess.getRuleIndexAccess().getAttrAssignment_7(), "rule__RuleIndex__AttrAssignment_7");
					put(grammarAccess.getRuleIndexToKeywordAccess().getNameAssignment_1(), "rule__RuleIndexToKeyword__NameAssignment_1");
					put(grammarAccess.getRuleIndexToKeywordAccess().getStartIndexAssignment_3_1(), "rule__RuleIndexToKeyword__StartIndexAssignment_3_1");
					put(grammarAccess.getRuleIndexToKeywordAccess().getEndDelimeterAssignment_4_1(), "rule__RuleIndexToKeyword__EndDelimeterAssignment_4_1");
					put(grammarAccess.getRuleIndexToKeywordAccess().getAttrAssignment_7(), "rule__RuleIndexToKeyword__AttrAssignment_7");
					put(grammarAccess.getRuleKeywordAccess().getNameAssignment_1(), "rule__RuleKeyword__NameAssignment_1");
					put(grammarAccess.getRuleKeywordAccess().getStartDelimeterAssignment_3_1(), "rule__RuleKeyword__StartDelimeterAssignment_3_1");
					put(grammarAccess.getRuleKeywordAccess().getEndDelimeterAssignment_4_1(), "rule__RuleKeyword__EndDelimeterAssignment_4_1");
					put(grammarAccess.getRuleKeywordAccess().getAttrAssignment_7(), "rule__RuleKeyword__AttrAssignment_7");
					put(grammarAccess.getRuleKeywordToIndexAccess().getNameAssignment_1(), "rule__RuleKeywordToIndex__NameAssignment_1");
					put(grammarAccess.getRuleKeywordToIndexAccess().getStartDelimeterAssignment_3_1(), "rule__RuleKeywordToIndex__StartDelimeterAssignment_3_1");
					put(grammarAccess.getRuleKeywordToIndexAccess().getEndIndexAssignment_4_1(), "rule__RuleKeywordToIndex__EndIndexAssignment_4_1");
					put(grammarAccess.getRuleKeywordToIndexAccess().getAttrAssignment_7(), "rule__RuleKeywordToIndex__AttrAssignment_7");
					put(grammarAccess.getModelAccess().getUnorderedGroup(), "rule__Model__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.yazgel.regex.s2m.ui.contentassist.antlr.internal.InternalS2MParser typedParser = (org.yazgel.regex.s2m.ui.contentassist.antlr.internal.InternalS2MParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public S2MGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(S2MGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
